@{
    ViewBag.Title = "Random Team Generator";
    var levels = ViewBag.Levels as List<List<string>>;
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">

<style>
    .container-flex {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        gap: 40px;
        margin-top: 20px;
        flex-wrap: wrap;
    }

    table {
        border-collapse: collapse;
        margin: auto;
    }

    th, td {
        border: 1px solid #ccc;
        padding: 5px;
        text-align: center;
    }

    th {
        background-color: #f8f8f8;
    }

    button {
        border: 1px solid black;
        background-color: white;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        button:hover {
            background-color: #f0f0f0;
            transform: translateY(-1px);
        }

    .result-box {
        min-width: 250px;
        text-align: left;
    }

    h3 i {
        margin-right: 5px;
    }

    .footer-space {
        height: 100px;
    }
</style>

<h2 style="text-align:center; margin-bottom:20px;">⚽ Random Team Generator</h2>

<div class="container-flex">

    <div>
        <form method="post" asp-action="RandomizeTeams" id="teamForm">
            <table>
                <tr>
                    <th>Level</th>
                    <th>Player 1</th>
                    <th>Player 2</th>
                </tr>
                <tbody id="levelsTable">
                    @for (int i = 0; i < levels.Count; i++)
                    {
                        <tr>
                            <td>@(i + 1)</td>
                            <td><input type="text" name="levels[@i][0]" value="@levels[i][0]" style="width:150px;" /></td>
                            <td><input type="text" name="levels[@i][1]" value="@levels[i][1]" style="width:150px;" /></td>
                        </tr>
                    }
                </tbody>
            </table>

            <div style="margin-top:15px; text-align:center;">
                <button type="button" id="addLevelBtn" style="margin-right:10px; padding:5px 10px;">
                    <i class="bi bi-plus-circle"></i> Add Level
                </button>
                <button type="submit" style="padding:5px 10px;">
                    <i class="bi bi-shuffle"></i> Randomize Teams
                </button>
            </div>
        </form>
    </div>

    <div id="resultSection" class="result-box">
        @if (ViewBag.Team1 != null)
        {
            <div style="display:flex; gap:40px;">
                <div>
                    <h3 style="color:#007bff;"><i class="bi bi-trophy-fill" style="color:gold;"></i> Team 1</h3>
                    <ul style="color:#007bff;">
                        @foreach (var player in ViewBag.Team1)
                        {
                            <li>@player</li>
                        }
                    </ul>
                </div>

                <div>
                    <h3 style="color:#dc3545;"><i class="bi bi-trophy-fill" style="color:gold;"></i> Team 2</h3>
                    <ul style="color:#dc3545;">
                        @foreach (var player in ViewBag.Team2)
                        {
                            <li>@player</li>
                        }
                    </ul>
                </div>
            </div>
        }
    </div>
</div>

<div class="footer-space"></div>

<script>
    document.getElementById("addLevelBtn").addEventListener("click", function () {
        const table = document.getElementById("levelsTable");
        const rows = table.getElementsByTagName("tr");
        if (rows.length > 0) {
            const lastRow = rows[rows.length - 1];
            const inputs = lastRow.getElementsByTagName("input");
            if (!inputs[0].value.trim() || !inputs[1].value.trim()) {
                alert("Please fill both player names before adding a new level.");
                return;
            }
        }

        const index = rows.length;
        const newRow = document.createElement("tr");
        newRow.innerHTML = `
            <td>${index + 1}</td>
            <td><input type="text" name="levels[${index}][0]" style="width:150px;" /></td>
            <td><input type="text" name="levels[${index}][1]" style="width:150px;" /></td>
        `;
        table.appendChild(newRow);
    });
</script>
